node JS
---->基本笔记：


1.Node.js REPL(交互式解释器)
	类似 Window 系统的终端或 Unix/Linux shell，我们可以在终端中输入命令，并接收系统的响应。
	Node 自带了交互式解释器，可以执行以下任务：
	读取--> 读取用户输入
	执行-->输入的数据结构
	打印 - 输出结果
	循环 - 循环操作以上步骤直到用户两次按下 ctrl-c 按钮退出
	
	
2.Node.js 回调函数
	Node.js 异步编程的直接体现就是回调。
	异步编程依托于回调来实现
	例如，我们可以一边读取文件，一边执行其他命令，在文件读取完成后，我们将文件内容作为回调函数的参数返回。这样在执行代码时就没有阻塞或等待文件 I/O 操作。这就大大提高了 Node.js 的性能，可以处理大量的并发请求。

